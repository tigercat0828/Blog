@page "/article/{id}"
@inject ArticleService ArticleService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@using Markdig
@if (article != null) {

    <div class="container-fluid">
        <div class="row mb-3">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@article.Title</h5>
                    <h6 class="card-subtitle mb-2 text-muted">@article.Description</h6>
                    <h6 class="card-subtitle mb-2 text-muted">@article.Created.ToString("yyyy/MM/d")</h6>
                    <p class="card-text">
                        @((MarkupString)MarkdownPreview)
                    </p>

                </div>
            </div>
        </div>
    </div>
    <a class="btn btn-primary me-3" href="/article/edit/@id">編輯</a>

    <button class="btn btn-danger me-3" @onclick="ToggleDeleteButton">刪除</button>
    @if (IsDeleteButtonShow)
    {
        <button class="btn btn-outline-danger" @onclick="DeleteArticle">確認</button>
    }
}

@code {
    [Parameter]
    public string id { get; set; }
    Article article;
    bool IsDeleteButtonShow =false;

    public string MarkdownPreview => Markdown.ToHtml(MarkDownContent);
    public string MarkDownContent { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        article = await ArticleService.GetArticleByIdAsync(id);
        MarkDownContent = article.Content;
    }
    private async Task DeleteArticle() {
        await ArticleService.DeleteArticleAsync(id);
        NavigationManager.NavigateTo("/article");
    }
    private void ToggleDeleteButton()
    {
        IsDeleteButtonShow = !IsDeleteButtonShow;
    }

}
